//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Register.DBContent
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBModel : DbContext
    {
        public DBModel()
            : base("name=DBModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<UserM> UserMs { get; set; }
    
        public virtual int sp_ChangePass(string changep, string email)
        {
            var changepParameter = changep != null ?
                new ObjectParameter("changep", changep) :
                new ObjectParameter("changep", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_ChangePass", changepParameter, emailParameter);
        }
    
        public virtual ObjectResult<UserM> ChangePass(string changep, string email)
        {
            var changepParameter = changep != null ?
                new ObjectParameter("changep", changep) :
                new ObjectParameter("changep", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserM>("ChangePass", changepParameter, emailParameter);
        }
    
        public virtual ObjectResult<UserM> ChangePass(string changep, string email, MergeOption mergeOption)
        {
            var changepParameter = changep != null ?
                new ObjectParameter("changep", changep) :
                new ObjectParameter("changep", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserM>("ChangePass", mergeOption, changepParameter, emailParameter);
        }
    }
}
